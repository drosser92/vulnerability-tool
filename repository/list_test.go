package repository

import (
    "testing"

    . "github.com/smartystreets/goconvey/convey"
)

func filename() string {
    return "testdata/repository_list.txt"
}

func filenameNoData() string {
    return "testdata/repository_list_empty.txt"
}

func TestGetListSuccess(t *testing.T) {

    Convey("Given that I have a file that contains a list of repositories", t, func() {

        filename := filename()

        Convey("When I try to load that list of repositories", func() {

            list, err := GetListFromFile(filename)

            Convey("Then I don't get any error", func() {

                So(err, ShouldBeNil)

                Convey("And I successfully get a list of repositories", func() {
                    So(list.repositories, ShouldNotBeEmpty)
                })
            })
        })
    })
}

func TestGetListSucessNoData(t *testing.T) {

    Convey("Given that I have a file that is empty", t, func() {

        filename := filenameNoData()

        Convey("When I try to load file", func() {

            list, err := GetListFromFile(filename)

            Convey("Then I don't get any error", func() {

                So(err, ShouldBeNil)

                Convey("And I get an empty list", func() {
                    So(list.repositories, ShouldBeEmpty)
                })
            })
        })
    })
}

func TestGetListFailNoFile(t *testing.T) {

    Convey("Given that I don't have a file that contains a list of repositories", t, func() {

        filename := ""

        Convey("When I try to load that list of repositories", func() {

            list, err := GetListFromFile(filename)

            Convey("Then I handle the error correctly and don't load anything", func() {

                So(err, ShouldNotBeNil)

                Convey("And I get no list", func() {

                    So(list, ShouldBeNil)
                })
            })
        })
    })
}
